{
  "name": "input",
  "files": [
    {
      "name": "input.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst types = {\n  file: \"block cursor-pointer p-0 py-0 file:mr-5 file:cursor-pointer file:bg-primary-500 file:px-3 file:py-2.5 file:hover:bg-primary-400 file:disabled:cursor-not-allowed file:disabled:bg-gray-200 file:disabled:text-gray-600 file:text-white file:hover:transition file:hover:ease-in-out file:hover:duration-300 text-sm file:border-0\",\n}\n\nconst inputVariants = cva(\n  \"aria-[invalid=true]:border-error-500 focus:aria-[invalid=true]:ring-error-500 focus:ring-primary-500 h-10 w-full p-3 text-sm shadow-sm placeholder:text-gray-400 focus:outline-none focus:ring-2 disabled:cursor-not-allowed disabled:bg-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background border-input border\",\n        filled: \"border-none bg-gray-100\",\n      },\n      size: {\n        default: \"h-10 text-base placeholder:text-sm\",\n        xs: \"h-8 text-sm placeholder:text-sm\",\n        md: \"h-10 text-lg placeholder:text-base\",\n        lg: \"h-12 text-xl placeholder:text-lg\",\n        xl: \"h-14 text-2xl placeholder:text-xl\",\n      },\n      radius: {\n        default: \"rounded-lg\",\n        rounded: \"rounded\",\n        sm: \"rounded-sm\",\n        md: \"rounded-md\",\n        xl: \"rounded-xl\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      radius: \"default\",\n    },\n  }\n)\n\ntype InputHTMLAttributesWithoutSize = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  \"size\"\n>\n\nexport interface InputProps\n  extends InputHTMLAttributesWithoutSize,\n    VariantProps<typeof inputVariants> {\n  leftSection?: React.ReactNode\n  rightSection?: React.ReactNode\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      radius,\n      type,\n      leftSection,\n      rightSection,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div className=\"relative\">\n        {leftSection && (\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center justify-center pl-3\">\n            {leftSection}\n          </div>\n        )}\n\n        <input\n          type={type}\n          className={cn(\n            inputVariants({ variant, size, radius }),\n            leftSection && \"pl-10\",\n            rightSection && \"pr-10\",\n            type && types[type as keyof typeof types],\n            className\n          )}\n          ref={ref}\n          {...props}\n        />\n\n        {rightSection && (\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3\">\n            {rightSection}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"
    }
  ],
  "type": "components:ui"
}