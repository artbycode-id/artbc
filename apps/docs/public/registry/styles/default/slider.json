{
  "name": "slider",
  "dependencies": [
    "@radix-ui/react-slider"
  ],
  "files": [
    {
      "name": "slider.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst sliderRangeVariants = cva(\"absolute h-full\", {\n  variants: {\n    color: {\n      default: \"bg-primary-500\",\n      warning: \"bg-warning-500\",\n      success: \"bg-success-500\",\n      error: \"bg-error-500\",\n      secondary: \"bg-secondary-500\",\n    },\n  },\n  defaultVariants: {\n    color: \"default\",\n  },\n})\n\nconst sliderThumbVariants = cva(\n  \"bg-background ring-offset-background block size-5 cursor-pointer border-4 transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-1 [&[data-disabled]]:cursor-not-allowed\",\n  {\n    variants: {\n      color: {\n        default: \"border-primary-500 focus-visible:ring-primary-500\",\n        warning: \"border-warning-500 focus-visible:ring-warning-500\",\n        success: \"border-success-500 focus-visible:ring-success-500\",\n        error: \"border-error-500 focus-visible:ring-error-500\",\n        secondary: \"border-secondary-500 focus-visible:ring-secondary-500\",\n      },\n      radius: {\n        default: \"rounded-full\",\n        rounded: \"rounded\",\n        sm: \"rounded-sm\",\n        md: \"rounded-md\",\n        lg: \"rounded-lg\",\n        xl: \"rounded-xl\",\n      },\n    },\n    defaultVariants: {\n      color: \"default\",\n      radius: \"default\",\n    },\n  }\n)\n\ntype SliderProps = React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root> &\n  VariantProps<typeof sliderRangeVariants> & {\n    color?: \"default\" | \"warning\" | \"success\" | \"error\" | \"secondary\"\n  } & VariantProps<typeof sliderThumbVariants> & {\n    color?: \"default\" | \"warning\" | \"success\" | \"error\" | \"secondary\"\n  }\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  SliderProps\n>(({ className, color, radius, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center [&[data-disabled]]:cursor-not-allowed [&[data-disabled]]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow cursor-pointer overflow-hidden rounded-full bg-gray-200 [&[data-disabled]]:cursor-not-allowed\">\n      <SliderPrimitive.Range className={cn(sliderRangeVariants({ color }))} />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb\n      className={cn(sliderThumbVariants({ color, radius }))}\n    />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"
    }
  ],
  "type": "components:ui"
}