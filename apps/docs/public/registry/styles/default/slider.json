{
  "name": "slider",
  "dependencies": [
    "@radix-ui/react-slider"
  ],
  "files": [
    {
      "name": "slider.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst sliderRangeVariants = cva(\"absolute h-full\", {\r\n  variants: {\r\n    color: {\r\n      default: \"bg-primary-500\",\r\n      warning: \"bg-warning-500\",\r\n      success: \"bg-success-500\",\r\n      error: \"bg-error-500\",\r\n      secondary: \"bg-secondary-500\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    color: \"default\",\r\n  },\r\n})\r\n\r\nconst sliderThumbVariants = cva(\r\n  \"bg-background ring-offset-background block size-5 cursor-pointer border-4 transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-1 [&[data-disabled]]:cursor-not-allowed\",\r\n  {\r\n    variants: {\r\n      color: {\r\n        default: \"border-primary-500 focus-visible:ring-primary-500\",\r\n        warning: \"border-warning-500 focus-visible:ring-warning-500\",\r\n        success: \"border-success-500 focus-visible:ring-success-500\",\r\n        error: \"border-error-500 focus-visible:ring-error-500\",\r\n        secondary: \"border-secondary-500 focus-visible:ring-secondary-500\",\r\n      },\r\n      radius: {\r\n        default: \"rounded-full\",\r\n        rounded: \"rounded\",\r\n        sm: \"rounded-sm\",\r\n        md: \"rounded-md\",\r\n        lg: \"rounded-lg\",\r\n        xl: \"rounded-xl\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      color: \"default\",\r\n      radius: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\ntype SliderProps = React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root> &\r\n  VariantProps<typeof sliderRangeVariants> & {\r\n    color?: \"default\" | \"warning\" | \"success\" | \"error\" | \"secondary\"\r\n  } & VariantProps<typeof sliderThumbVariants> & {\r\n    color?: \"default\" | \"warning\" | \"success\" | \"error\" | \"secondary\"\r\n  }\r\n\r\nconst Slider = React.forwardRef<\r\n  React.ElementRef<typeof SliderPrimitive.Root>,\r\n  SliderProps\r\n>(({ className, color, radius, ...props }, ref) => (\r\n  <SliderPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full touch-none select-none items-center [&[data-disabled]]:cursor-not-allowed [&[data-disabled]]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow cursor-pointer overflow-hidden rounded-full bg-gray-200 [&[data-disabled]]:cursor-not-allowed\">\r\n      <SliderPrimitive.Range className={cn(sliderRangeVariants({ color }))} />\r\n    </SliderPrimitive.Track>\r\n    <SliderPrimitive.Thumb\r\n      className={cn(sliderThumbVariants({ color, radius }))}\r\n    />\r\n  </SliderPrimitive.Root>\r\n))\r\nSlider.displayName = SliderPrimitive.Root.displayName\r\n\r\nexport { Slider }\r\n"
    }
  ],
  "type": "components:ui"
}