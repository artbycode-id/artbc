{
  "name": "accordion",
  "dependencies": [
    "@radix-ui/react-accordion"
  ],
  "files": [
    {
      "name": "accordion.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst accordionVariants = cva(\"px-4\", {\n  variants: {\n    variant: {\n      default: \"border-input [&>div#accordion-item]:border-b\",\n      contained: \"border-input divide-input divide-y border\",\n      transparent: \"\",\n    },\n    radius: {\n      default: \"rounded-lg\",\n      xs: \"rounded\",\n      sm: \"rounded-sm\",\n      md: \"rounded-md\",\n      xl: \"rounded-xl\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    radius: \"default\",\n  },\n})\n\ntype AccordionProps = React.ComponentPropsWithoutRef<\n  typeof AccordionPrimitive.Root\n> &\n  VariantProps<typeof accordionVariants>\n\nconst Accordion = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Root>,\n  AccordionProps\n>(({ className, variant, radius, ...props }, ref) => (\n  <AccordionPrimitive.Root\n    ref={ref}\n    className={cn(accordionVariants({ variant, radius }), className)}\n    {...props}\n  />\n))\nAccordion.displayName = \"Accordion\"\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    id=\"accordion-item\"\n    ref={ref}\n    className={cn(\"\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\ninterface AccordionTriggerProps\n  extends React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger> {\n  chevronPosition?: \"left\" | \"right\"\n  rotate?: \"45\" | \"90\" | \"180\"\n  icon?: React.ReactNode\n}\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  AccordionTriggerProps\n>(\n  (\n    {\n      className,\n      children,\n      chevronPosition = \"right\",\n      rotate = \"180\",\n      icon = <ChevronDown className=\"size-5\" />,\n      ...props\n    },\n    ref\n  ) => (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        ref={ref}\n        className={cn(\n          \"flex w-full items-center justify-between py-4 font-medium transition-all data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n          chevronPosition == \"left\" && \"\",\n          rotate === \"45\" && `[&[data-state=open]>svg]:rotate-45`,\n          rotate === \"90\" && `[&[data-state=open]>svg]:rotate-90`,\n          rotate === \"180\" && `[&[data-state=open]>svg]:rotate-180`,\n          className\n        )}\n        {...props}\n      >\n        {chevronPosition === \"left\" && icon}\n        <div\n          className={cn(\"flex-1 text-left\", {\n            \"ml-3\": chevronPosition === \"left\",\n          })}\n        >\n          {children}\n        </div>\n        {chevronPosition === \"right\" && icon}\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n)\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm transition-all\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"
    }
  ],
  "type": "components:ui"
}