{
  "name": "tooltip",
  "dependencies": [
    "@radix-ui/react-tooltip"
  ],
  "files": [
    {
      "name": "tooltip.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst tooltipVariant = cva(\n  \"text-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=top]:slide-in-from-bottom-2 data-[side=right]:slide-in-from-left-2 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 z-50 overflow-hidden rounded-md border px-3 py-1.5 text-sm shadow-md\",\n  {\n    variants: {\n      color: {\n        default: \"bg-background\",\n        primary: \"bg-primary-500 text-white\",\n        warning: \"bg-warning-500 text-white\",\n        success: \"bg-success-500 text-white\",\n        error: \"bg-error-500 text-white\",\n        secondary: \"bg-secondary-500 text-white\",\n      },\n    },\n    defaultVariants: {\n      color: \"default\",\n    },\n  }\n)\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\ntype TooltipContentProps = React.ComponentPropsWithoutRef<\n  typeof TooltipPrimitive.Content\n> &\n  VariantProps<typeof tooltipVariant> & {}\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  TooltipContentProps\n>(({ className, sideOffset = 4, color, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(tooltipVariant({ color }), className)}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"
    }
  ],
  "type": "components:ui"
}